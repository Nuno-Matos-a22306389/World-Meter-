package pt.ulusofona.aed.deisiworldmeter;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class Main {

    static ArrayList<Cidade> cidades = new ArrayList<>();
    static ArrayList<Pais> todosOsPaises = new ArrayList<>();
    static ArrayList<Populacao> populacao = new ArrayList<>();
    static ArrayList<String> inputInvalido = new ArrayList<>();
    static boolean isNotValidInteger(String s) {

        if (s == null || s.isEmpty()) {

            return true;

        }

        for (char c : s.toCharArray()) {

            if (Character.isDigit(c)) {

                //is digit

            } else {

                return true;

            }
        }

        return false;
    }

    static boolean isNotValidFloat(String s) {

        try {

            Double convertToDouble = Double.parseDouble(s);

        } catch (NumberFormatException e) {
            return true;
        }

        return false;
    }

    static boolean isNotValidString(String s) {

        if (s == null || s.isEmpty()) {

            return true;

        }

        for (char c : s.toCharArray()) {

            if (Character.isLetter(c)) {

                //is Letter

            } else {

                return true;

            }
        }

        return false;
    }

    static boolean leFilePaises(File ficheiroPaises) {
        int LePaisesErrados = 0;
        int LePaisesCertos = 0;
        int PrimeiraLinhaErrado = -1;
        int count =0;

        Scanner scanner;

        try {
            scanner = new Scanner(ficheiroPaises);
        } catch (FileNotFoundException e) {
            return false;
        }

        boolean firstline = true;

        while (scanner.hasNext()) {
            count++;

            String line = scanner.nextLine();

            if (firstline) {

                firstline = false;

            } else {

                String[] parts = line.split(",");

                if (parts.length != 4) {
                    LePaisesErrados++;
                    if (PrimeiraLinhaErrado == -1){
                        PrimeiraLinhaErrado=count;
                    }
                } else {

                    String id = parts[0];
                    String alfa2 = parts[1];
                    String alfa3 = parts[2];
                    String nome = parts[3];

                    Pais pais;
                    pais = new Pais();
                    pais.id = Integer.parseInt(id);
                    pais.alfa2 = alfa2;
                    pais.alfa3 = alfa3;
                    pais.nome = nome;



                    // Filtro paises duplicados
                    if (todosOsPaises.isEmpty()) {

                        todosOsPaises.add(pais);

                    } else {

                        boolean notContains = true;

                        for (Pais pais1 : todosOsPaises) {

                            if (pais.id == pais1.id) {

                                notContains = false;
                                break;

                            }

                        }

                        if (notContains) {
                            todosOsPaises.add(pais);
                        }else {
                            LePaisesErrados++;
                            if (PrimeiraLinhaErrado == -1){
                                PrimeiraLinhaErrado=count;
                            }
                        }

                    }

                }
            }
        }
        LePaisesCertos = count - LePaisesErrados -1;

        String InputsPaisesInvalidos = "paises.csv | "+LePaisesCertos+" | "+LePaisesErrados+" | "+PrimeiraLinhaErrado;
        inputInvalido.add(InputsPaisesInvalidos);
        return true;
    }
    static boolean leFileCidades(File ficheiroCidades) {
        int LeCidadesErrados = 0;
        int LeCidadesCertos= 0;
        int PrimeiraLinhaErrado = -1;
        int count = 0;
        Scanner scanner;

        try {
            scanner = new Scanner(ficheiroCidades);
        } catch (FileNotFoundException e) {
            return false;
        }

        boolean firstLine = true;

        while (scanner.hasNext()) {
            count++;

            String line = scanner.nextLine();

            if (firstLine) {

                firstLine = false;

            } else {

                String[] parts = line.split(",");

                if (parts.length != 6) {
                    LeCidadesErrados++;
                    if (PrimeiraLinhaErrado == -1){
                        PrimeiraLinhaErrado=count;
                    }
                } else {

                    String alfa2 = parts[0];
                    String cidade = parts[1];
                    String regiao = parts[2];
                    String populacao = parts[3];
                    String latitude = parts[4];
                    String longitude = parts[5];

                    if (isNotValidFloat(populacao) && isNotValidInteger(populacao)) { //it´s all float conv to int
                        LeCidadesErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidFloat(latitude)) {
                        LeCidadesErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidFloat(longitude)) {
                        LeCidadesErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else { // Se chegar aqui tudo é válido, logo podemos converter e criar o objeto

                        Cidade cidade1;
                        cidade1 = new Cidade();
                        cidade1.alfa2 = alfa2;
                        cidade1.cidade = cidade;
                        cidade1.regiao = regiao; //TODO: PAD ZEROS LEFT
                        cidade1.populacao = Float.valueOf(populacao).intValue(); // Erro processamento
                        cidade1.latitude = Double.parseDouble(latitude);
                        cidade1.longitude = Double.parseDouble(longitude);

                        boolean abibi = true;
                        for (Pais pais : todosOsPaises) {

                            if (pais.alfa2.equals(cidade1.alfa2)) {

                                cidade1.pais = new Pais();
                                cidade1.pais = pais;

                                pais.cidades.add(cidade1);

                                cidades.add(cidade1);
                                abibi=false;
                                break;

                            }
                        }
                        if (abibi){
                            LeCidadesErrados++;
                            if (PrimeiraLinhaErrado == -1){
                                PrimeiraLinhaErrado=count;
                            }
                        }
                    }

                }
            }
        }
        LeCidadesCertos = count - LeCidadesErrados -1;

        String InputsCidadesInvalidos = "cidades.csv | "+LeCidadesCertos+" | "+LeCidadesErrados+" | "+PrimeiraLinhaErrado;
        inputInvalido.add(InputsCidadesInvalidos);
        return true;
    }
    static boolean leFilePolulacao(File ficheiroPopulacao) {
        int LePolulacaoErrados = 0;
        int LePolulacaoCertos = 0;
        int PrimeiraLinhaErrado = -1;
        int count =0;
        ArrayList Ids = new ArrayList<>();

        Scanner scanner;

        try {
            scanner = new Scanner(ficheiroPopulacao);
        } catch (FileNotFoundException e) {
            return false;
        }

        boolean firtLine = true;

        while (scanner.hasNext()) {
            count++;

            String line = scanner.nextLine();

            if (firtLine) {

                firtLine = false;

            } else {

                String[] parts = line.split(",");

                if (parts.length != 5) {
                    LePolulacaoErrados++;
                    if (PrimeiraLinhaErrado == -1){
                        PrimeiraLinhaErrado=count;
                    }
                } else {
                    String id =parts[0];
                    String ano = parts[1];
                    String populacaoMasculina = parts[2];
                    String populacaoFeminina = parts[3];
                    String densidade = parts[4];

                    if (isNotValidInteger(id)) {
                        LePolulacaoErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidInteger(ano)) {
                        LePolulacaoErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidInteger(populacaoMasculina)) {
                        LePolulacaoErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidInteger(populacaoFeminina)) {
                        LePolulacaoErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else if (isNotValidFloat(densidade)) {
                        LePolulacaoErrados++;
                        if (PrimeiraLinhaErrado == -1){
                            PrimeiraLinhaErrado=count;
                        }
                    } else {

                        Populacao populacao1;
                        populacao1 = new Populacao();
                        populacao1.id = Integer.parseInt(id);
                        populacao1.ano = Integer.parseInt(ano);
                        populacao1.populacaoMasculina = Integer.parseInt(populacaoMasculina);
                        populacao1.populacaoFeminina = Integer.parseInt(populacaoFeminina);
                        populacao1.densidade = Float.parseFloat(densidade);

                        boolean abibi = true;

                        for (Pais pais : todosOsPaises) {
                            if (pais.id == populacao1.id) {
                                populacao.add(populacao1);
                                pais.populacao.add(populacao1);
                                abibi=false;
                                break;
                            }
                        }
                        if (abibi){
                            LePolulacaoErrados++;
                            if (PrimeiraLinhaErrado == -1){
                                PrimeiraLinhaErrado=count;
                            }
                        }
                    }
                }
            }
        }
        LePolulacaoCertos = count - LePolulacaoErrados -1;

        String InputsPopulacaoInvalidos = "populacao.csv | "+LePolulacaoCertos+" | "+LePolulacaoErrados+" | "+PrimeiraLinhaErrado;
        inputInvalido.add(InputsPopulacaoInvalidos);
        return true;
    }



    public static boolean parseFiles(File folder) {

        todosOsPaises = new ArrayList<>();

        cidades = new ArrayList<>();

        populacao = new ArrayList<>();

        inputInvalido = new ArrayList<>();

        boolean leituraFilePaises = leFilePaises(new File(folder, "paises.csv"));
        boolean leituraFileCidades = leFileCidades(new File(folder, "cidades.csv"));
        boolean leituraFilePopulacao = leFilePolulacao(new File(folder, "populacao.csv"));

        return leituraFileCidades && leituraFilePaises && leituraFilePopulacao;
    }

    public static ArrayList getObjects(TipoEntidade tipo) {

        if (tipo == TipoEntidade.PAIS) {

            return todosOsPaises;

        } else if (tipo == TipoEntidade.CIDADE) {

            return cidades;

        } else if (tipo == TipoEntidade.INPUT_INVALIDO) {

            return inputInvalido;
        }

        return new ArrayList<>();
    }


    public static void main(String[] args) {
        System.out.println("Hello world!");
    }
}
